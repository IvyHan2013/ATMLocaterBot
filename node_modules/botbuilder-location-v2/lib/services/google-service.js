'use strict';
var rp = require('request-promise');
var sprintf_js_1 = require('sprintf-js');
var formAugmentation = '&form=BTCTRL';
var findLocationByQueryUrl = 'https://maps.googleapis.com/maps/api/place/textsearch/json?query=';
var findLocationByPointUrl = 'https://dev.virtualearth.net/REST/v1/Locations/%1$s,%2$s?' + formAugmentation;
var findImageByPointUrl =
    'https://dev.virtualearth.net/REST/V1/Imagery/Map/Road/%1$s,%2$s/15?mapSize=500,280&pp=%1$s,%2$s;1;%3$s&dpi=1&logo=always' +
    formAugmentation;
var findImageByBBoxUrl =
    'https://dev.virtualearth.net/REST/V1/Imagery/Map/Road?mapArea=%1$s,%2$s,%3$s,%4$s&mapSize=500,280&pp=%5$s,%6$s;1;%7$s&dpi=1&logo=always' +
    formAugmentation;
function getLocationByQuery(apiKey, address) {
    var url = addKeyToUrl(findLocationByQueryUrl + encodeURIComponent(address), apiKey) + '&q=';
    return getLocation(url);
}
exports.getLocationByQuery = getLocationByQuery;
function GetLocationMapImageUrl(apiKey, location, index) {
    if (location && location.geometry && location.geometry.location) {
        console.log(location);
        var point = location.geometry.location;
        var url;
        var sIndex = typeof index === 'undefined' ? '' : index.toString();
        if (location.bbox && location.bbox.length == 4) {
            url = sprintf_js_1.sprintf(
                findImageByBBoxUrl,
                location.bbox[0],
                location.bbox[1],
                location.bbox[2],
                location.bbox[3],
                point.coordinates[0],
                point.coordinates[1],
                sIndex
            );
        } else {
            url = sprintf_js_1.sprintf(findImageByPointUrl, point.lat, point.lng, sIndex);
            console.log('url 1;' + url);
        }
        url = addKeyToUrl(url, apiKey);
        console.log(url);
        return url;
    }
    throw 'Invalid Location Format: ' + location;
}
exports.GetLocationMapImageUrl = GetLocationMapImageUrl;

function getLocation(url) {
    var requestData = {
        url: url,
        json: true
    };
    return rp(requestData).then(function(body) {
        if (body.results.length > 0) {
            return body.results;
        } else {
            throw 'Invalid Api Response';
        }
    });
}
function addKeyToUrl(url, apiKey) {
    return url + '&key=' + apiKey;
}
